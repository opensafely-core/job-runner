version: "3.6"
services:
  job-runner:
    build: .
    image: docker.opensafely.org/job-runner:latest
    environment:
      # The job server endpoint
      - JOB_SERVER_ENDPOINT=${OPENSAFELY_JOB_SERVER_ENDPOINT}
      # The backend requests which we should monitor
      - BACKEND=${OPENSAFELY_BACKEND}
      # Credentials for acessing the job server
      - QUEUE_USER=${OPENSAFELY_QUEUE_USER}
      - QUEUE_PASS=${OPENSAFELY_QUEUE_PASS}
      # A location where outputs should be stored
      - HIGH_PRIVACY_STORAGE_BASE=${OPENSAFELY_HIGH_PRIVACY_STORAGE_BASE}
      - MEDIUM_PRIVACY_STORAGE_BASE=${OPENSAFELY_MEDIUM_PRIVACY_STORAGE_BASE}
      # A Github developer access key which can read private repos
      - PRIVATE_REPO_ACCESS_TOKEN=${OPENSAFELY_PRIVATE_REPO_ACCESS_TOKEN}
      # Database URLs
      - FULL_DATABASE_URL=${OPENSAFELY_FULL_DATABASE_URL}
      - SLICE_DATABASE_URL=${OPENSAFELY_SLICE_DATABASE_URL}
      - DUMMY_DATABASE_URL=${OPENSAFELY_DUMMY_DATABASE_URL}
      - TEMP_DATABASE_NAME=${OPENSAFELY_TEMP_DATABASE_NAME}
      # Polling
      - POLL_INTERVAL=${OPENSAFELY_POLL_INTERVAL}
      # Parallelism
      - MAX_WORKERS=${OPENSAFELY_MAX_WORKERS}

    volumes:
      - type: bind
        source: ${OPENSAFELY_MEDIUM_PRIVACY_STORAGE_BASE}
        target: ${OPENSAFELY_MEDIUM_PRIVACY_STORAGE_BASE}
      - type: bind
        source: ${OPENSAFELY_HIGH_PRIVACY_STORAGE_BASE}
        target: ${OPENSAFELY_HIGH_PRIVACY_STORAGE_BASE}
      - type: bind
        source: //var/run/docker.sock
        target: /var/run/docker.sock
    command:
      - "watch"
      - ${OPENSAFELY_JOB_SERVER_ENDPOINT}
