name: Tag repo; build and publish assets
on:
  push:
    branches:
      - master
      - main
  # this allows us to trigger manually
  workflow_dispatch:

env:
  IMAGE_NAME: job-runner

jobs:
  tag-new-version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.new_tag }}
      version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          release_branches: master,main

  build-and-publish-package:
    runs-on: ubuntu-latest
    name: Build and publish PyPI package
    needs: tag-new-version
    if: needs.tag-new-version.outputs.tag
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install wheel package
      run: |
        pip install build wheel
    - name: Generate correct value for VERSION file
      run: |
        echo ${{ needs.tag-new-version.outputs.tag }} > VERSION
    - uses: extractions/setup-just@v1
    - name: Build package
      run: just package-build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      if: needs.tag-new-version.outputs.tag
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}

  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    name: Build and publish docker image
    # Only on a tagged release
    needs: tag-new-version
    if: needs.tag-new-version.outputs.tag
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build image
      run: |
          make -C docker docker-build  # build base and dev images
          make -C docker docker-build ENV=prod  # build and tag prod image
    - name: Test image
      run: make -C docker docker-test ARGS='-e PRIVATE_REPO_ACCESS_TOKEN'
    - name: Log into GitHub Container Registry
      run: docker login https://ghcr.io -u ${{ github.actor }} --password ${{ secrets.DOCKER_RW_TOKEN }}
    - name: Push image to GitHub Container Registry
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
