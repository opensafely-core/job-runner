[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]

build-backend = "setuptools.build_meta"

[project]
name = "opensafely-jobrunner"
description = "OpenSAFELY job scheduling and executor"
readme = "README.md"
authors = [{ name = "OpenSAFELY", email = "tech@opensafely.org" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
requires-python = ">=3.8"
dependencies = [
    "opensafely-pipeline@https://github.com/opensafely-core/pipeline/archive/refs/tags/v2025.03.06.161237.zip",
    "ruyaml",
    "requests",
    "opentelemetry-exporter-otlp-proto-http",
]
dynamic = ["version"]

[project.scripts]
add_job = "jobrunner.cli.add_job:run"
flags = "jobrunner.cli.flags:run"
kill_job = "jobrunner.cli.kill_job:run"
local_run = "jobrunner.cli.local_run:run"
migrate = "jobrunner.cli.migrate:run"
prepare_for_reboot = "jobrunner.cli.prepare_for_reboot:run"
retry_job = "jobrunner.cli.retry_job:run"


[project.urls]
Home = "https://opensafely.org"
Documentation = "https://docs.opensafely.org"
Source = "https://github.com/opensafely-core/job-runner"

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
source = ["jobrunner"]
omit = ["jobrunner/cli/manifests.py", 'jobrunner/service.py']

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true

[tool.coverage.html]
show_contexts = true

[tool.isort]
profile = "black"
known_third_party = [
    "pytest",
    "requests",
    "requests_mock",
    "setuptools",
    "ruamel.yaml",
]
lines_after_imports = 2
skip_glob = [".direnv", ".venv", "venv"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning:opentelemetry.*:",
    "ignore::DeprecationWarning:pytest_freezegun:17",
    "ignore::DeprecationWarning:pytest_responses:9",
]

[tool.setuptools.packages.find]
include = ["jobrunner*"]

[tool.setuptools_scm]
